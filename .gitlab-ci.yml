# This file is a template, and might need editing before it works on your project.
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages

default:
  image: python:3


variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

cache:
  paths:
    - .cache/pip
    - venv/

before_script:
  - apt-get update
  - apt-get install ffmpeg libsm6 libxext6 -y
  - pip install virtualenv
  - source venv/bin/activate
  #- pip install -r py-requirements.txt

stages:          # List of stages for jobs, and their order of execution
  - prepare
  - build
  - test
  - deploy

prepare-job:
  stage: prepare
  script:
    - pip install -r py-requirements.txt

build-job:       # This job runs in the build stage, which runs first.
  stage: build
  script:
    - echo "building"
    - cd src
    - python3 main.py build-only
    - echo "Build OK"

funct-test-job:   # This job runs in the test stage.
  stage: test    # It only starts when the job in the build stage completes successfully.
  script:
    - echo "Running tests"
    - cd src/tests/
    - python3 tests.py
    - echo "Tests OK"

deploy-job:      # This job runs in the deploy stage.
  stage: deploy  # It only runs when *both* jobs in the test stage complete successfully.
  script:
    - echo "Deploying application..."
    - echo "Application successfully deployed."
